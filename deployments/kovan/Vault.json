{
  "address": "0x76aC1ddb24968a73cC8ffB08914D3Ce5e6E486AA",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "whitelist",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "AllowContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "allowed",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "uuid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "name": "CodeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "FlashLoan",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "prevOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "OwnershipAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RegisterProtocol",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RescueFunds",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newTeam",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "TransferControl",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newRate",
          "type": "uint256"
        }
      ],
      "name": "UpdateFlashLoanRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_FLASHLOAN_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_status",
          "type": "bool"
        }
      ],
      "name": "allowContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedContracts",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_status",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "approveContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shareOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "flashFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC3156FlashBorrower",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "flashLoan",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flashLoanRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCodeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_flashLoanRate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "maxFlashLoan",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "rescueFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_ceil",
          "type": "bool"
        }
      ],
      "name": "toShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "share",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_share",
          "type": "uint256"
        }
      ],
      "name": "toUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "totals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalUnderlyingDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalSharesMinted",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newRate",
          "type": "uint256"
        }
      ],
      "name": "updateFlashloanRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userApprovalNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userApprovedContracts",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7082ca4009b39877627cc8a7de1e18da9590e2b6f370328a4750e45decfcb4f4",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0xF5B35b607377850696cAF2ac4841D61E7d825a3b",
    "contractAddress": null,
    "transactionIndex": 1,
    "gasUsed": "2318248",
    "logsBloom": "0x
    "blockHash": "0xfd93c44dd6a7178f0a156108797098210ab8dd673d896c135d6c66a3be692abc",
    "transactionHash": "0x7082ca4009b39877627cc8a7de1e18da9590e2b6f370328a4750e45decfcb4f4",
    "logs": [],
    "blockNumber": 31808592,
    "cumulativeGasUsed": "2373375",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "ffdeacf776442ab7ecf77b730bcae001",
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"whitelist\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"AllowContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"allowed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uuid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"name\":\"CodeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"OwnershipAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RegisterProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RescueFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newTeam\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TransferControl\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"UpdateFlashLoanRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FLASHLOAN_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"allowContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"approveContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shareOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"flashFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashLoanRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCodeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flashLoanRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"maxFlashLoan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"rescueFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_ceil\",\"type\":\"bool\"}],\"name\":\"toShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_share\",\"type\":\"uint256\"}],\"name\":\"toUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalUnderlyingDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSharesMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newRate\",\"type\":\"uint256\"}],\"name\":\"updateFlashloanRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userApprovalNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userApprovedContracts\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@samparsky\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"setup a vault\"},\"deposit(address,address,address,uint256)\":{\"params\":{\"_amount\":\"Token amount in native representation to deposit.\",\"_from\":\"which account to pull the tokens.\",\"_to\":\"which account to push the tokens.\",\"_token\":\"The ERC-20 token to deposit.\"},\"returns\":{\"amountOut\":\"The deposit amount in underlying token\",\"shareOut\":\"The deposit amount in vault shares\"}},\"flashFee(address,uint256)\":{\"params\":{\"\":\"// _token The loan currency.\",\"_amount\":\"The amount of tokens lent.\"},\"returns\":{\"_0\":\"The amount of `token` to be charged for the loan, on top of the returned principal.\"}},\"flashLoan(address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"The amount of tokens lent.\",\"_data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"_receiver\":\"The receiver of the tokens in the loan, and the receiver of the callback.\",\"_token\":\"The loan currency.\"}},\"getCodeAddress()\":{\"details\":\"Get current implementation code address.\"},\"maxFlashLoan(address)\":{\"params\":{\"_token\":\"The loan currency.\"},\"returns\":{\"_0\":\"The amount of `token` that can be borrowed.\"}},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Proxiable UUID marker function.      This would help to avoid wrong logic contract to be used for upgrading.\"},\"rescueFunds(address)\":{\"params\":{\"_token\":\"ERC20 token to rescue funds from\"}},\"toShare(address,uint256,bool)\":{\"details\":\"Helper function to represent an `amount` of `token` in shares.\",\"params\":{\"_amount\":\"The `token` amount.\",\"_ceil\":\"If to ceil the amount or not\",\"_token\":\"The ERC-20 token.\"},\"returns\":{\"share\":\"The token amount represented in shares.\"}},\"toUnderlying(address,uint256)\":{\"params\":{\"_share\":\"The amount of shares.\",\"_token\":\"The ERC-20 token.\"},\"returns\":{\"amount\":\"The share amount back into native representation.\"}},\"transfer(address,address,address,uint256)\":{\"params\":{\"_from\":\"which user to pull the tokens.\",\"_shares\":\"of shares to transfer\",\"_to\":\"which user to push the tokens.\",\"_token\":\"The ERC-20 token to transfer.\"}},\"transferOwnership(address)\":{\"params\":{\"_newOwner\":\"The new team\"}},\"updateFlashloanRate(uint256)\":{\"details\":\"Update the flashloan rate charged, only owner can call\",\"params\":{\"_newRate\":\"The ERC-20 token.\"}},\"withdraw(address,address,address,uint256)\":{\"params\":{\"_from\":\"which user to pull the tokens.\",\"_shares\":\"of shares to withdraw\",\"_to\":\"which user to push the tokens.\",\"_token\":\"The ERC-20 token to withdraw.\"},\"returns\":{\"amountOut\":\"The amount of underlying transferred\"}}},\"title\":\"Vault\",\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,address,address,uint256,uint256)\":{\"notice\":\"Emitted on deposit\"},\"Withdraw(address,address,address,uint256,uint256)\":{\"notice\":\"Emitted on withdraw\"}},\"kind\":\"user\",\"methods\":{\"MAX_FLASHLOAN_RATE()\":{\"notice\":\"max flashlaon rate 10%\"},\"acceptOwnership()\":{\"notice\":\"accept transfer of control\"},\"allowContract(address,bool)\":{\"notice\":\"Enables or disables a contract for approval without signed message.\"},\"allowedContracts(address)\":{\"notice\":\"mapping to contract to whitelist status\"},\"approveContract(address,address,bool,uint8,bytes32,bytes32)\":{\"notice\":\"approve a contract to enable the contract to withdraw\"},\"balanceOf(address,address)\":{\"notice\":\"mapping of token asset to user address and balance\"},\"deposit(address,address,address,uint256)\":{\"notice\":\"Deposit an amount of `token`\"},\"flashFee(address,uint256)\":{\"notice\":\"The fee to be charged for a given loan.\"},\"flashLoan(address,address,uint256,bytes)\":{\"notice\":\"Initiate a flash loan.\"},\"flashLoanRate()\":{\"notice\":\"the flashloan rate to charge for flash loans\"},\"maxFlashLoan(address)\":{\"notice\":\"The amount of currency available to be lent.\"},\"name()\":{\"notice\":\"vault name\"},\"owner()\":{\"notice\":\"the address that access to perform `admin` functions\"},\"pause()\":{\"notice\":\"pause vault actions\"},\"rescueFunds(address)\":{\"notice\":\"rescueFunds Enables us to rescue funds that are not tracked\"},\"toUnderlying(address,uint256)\":{\"notice\":\"Helper function represent shares back into the `token` amount.\"},\"totals(address)\":{\"notice\":\"mapping of asset to total deposit and shares minted\"},\"transfer(address,address,address,uint256)\":{\"notice\":\"Transfer share of `token` to another account\"},\"transferOwnership(address)\":{\"notice\":\"Transfer control from current owner address to another\"},\"unpause()\":{\"notice\":\"unpause vault actions\"},\"userApprovalNonce(address)\":{\"notice\":\"mapping of user to approval nonce\"},\"userApprovedContracts(address,address)\":{\"notice\":\"mapping of user to contract to approval status\"},\"version()\":{\"notice\":\"vault version\"},\"withdraw(address,address,address,uint256)\":{\"notice\":\"Withdraw the underlying share of `token` from a user account.\"}},\"notice\":\"Vault contract stores assets deposited into the Lending pairs. It enables deposit, withdrawal, flashloans and transfer of tokens. It represents the deposited token amount in form of shares This contract implements the EIP3156 IERC3156FlashBorrower for flashloans. Rebasing tokens ARE NOT supported and WILL cause loss of funds.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vault.sol\":\"Vault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {UpgradeableProxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9abb3184c06afb50807598533c4c0943dd864080d310ac28cbb5b2cfae6a18b1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor () {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/Vault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.1;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"./interfaces/IERC3156FlashBorrower.sol\\\";\\nimport \\\"./VaultBase.sol\\\";\\n\\n////////////////////////////////////////////////////////////////////////////////////////////\\n///\\n/// @title Vault\\n/// @author @samparsky\\n/// @notice Vault contract stores assets deposited into the Lending pairs.\\n/// It enables deposit, withdrawal, flashloans and transfer of tokens.\\n/// It represents the deposited token amount in form of shares\\n/// This contract implements the EIP3156 IERC3156FlashBorrower for flashloans.\\n/// Rebasing tokens ARE NOT supported and WILL cause loss of funds.\\n///\\n////////////////////////////////////////////////////////////////////////////////////////////\\n\\ncontract Vault is VaultBase {\\n    using SafeERC20 for IERC20;\\n\\n    /// @notice modifier to allow only blacksmith team to call a function\\n    modifier onlyOwner {\\n        require(msg.sender == owner, \\\"ONLY_OWNER\\\");\\n        _;\\n    }\\n\\n    modifier allowed(address _from) {\\n        require(\\n            msg.sender == _from || userApprovedContracts[_from][msg.sender] == true,\\n            \\\"ONLY_ALLOWED\\\"\\n        );\\n        _;\\n    }\\n\\n    /// @dev setup a vault\\n    constructor() VaultBase() {}\\n\\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n    // UUPSProxiable\\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n    function initialize(uint256 _flashLoanRate, address _owner) external override initializer {\\n        require(_owner != address(0), \\\"INVALID_OWNER\\\");\\n        require(flashLoanRate < MAX_FLASHLOAN_RATE, \\\"INVALID_RATE\\\");\\n\\n        __init_ReentrancyGuard();\\n        \\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(\\n            _EIP712_TYPE_HASH,\\n            _HASHED_NAME,\\n            _HASHED_VERSION\\n        );\\n        \\n        flashLoanRate = _flashLoanRate;\\n        owner = _owner;\\n    }\\n\\n    function proxiableUUID() public pure override returns (bytes32) {\\n        return keccak256(\\\"org.warp.contracts.warpvault.implementation\\\");\\n    }\\n\\n    function updateCode(address newAddress) external override onlyOwner {\\n        _updateCodeAddress(newAddress);\\n    }\\n\\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n    // Vault Actions\\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\\n\\n    /// @notice Enables or disables a contract for approval without signed message.\\n    function allowContract(address _contract, bool _status) external onlyOwner {\\n        // Checks\\n        require(_contract != address(0), \\\"invalid_address\\\");\\n\\n        // Effects\\n        allowedContracts[_contract] = _status;\\n        emit AllowContract(_contract, _status);\\n    }\\n\\n    /// @notice approve a contract to enable the contract to withdraw\\n    function approveContract(\\n        address _user,\\n        address _contract,\\n        bool _status,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external override {\\n        require(_contract != address(0), \\\"INVALID_CONTRACT\\\");\\n        require(_user != address(0), \\\"INVALID_USER\\\");\\n\\n        if (v == 0 && r == bytes32(0) && s == bytes32(0)) {\\n            // ensure that user match\\n            require(_user == msg.sender, \\\"NOT_SENDER\\\");\\n            // ensure that it's a contract\\n            require(msg.sender != tx.origin, \\\"ONLY_CONTRACT\\\");\\n            // ensure that _user != _contract\\n            require(_user != _contract, \\\"INVALID_APPROVE\\\");\\n            // ensure that _contract is allowed\\n            require(allowedContracts[_contract], \\\"NOT_WHITELISTED\\\");\\n        } else {\\n            bytes32 digest =\\n                keccak256(\\n                    abi.encodePacked(\\n                        \\\"\\\\x19\\\\x01\\\",\\n                        _domainSeparatorV4(),\\n                        keccak256(\\n                            abi.encode(\\n                                _VAULT_APPROVAL_SIGNATURE_TYPE_HASH,\\n                                _status // solhint-disable-next-line\\n                                    ? keccak256(\\n                                        \\\"Grant full access to funds in Warp Vault? Read more here https://warp.finance/permission\\\"\\n                                    )\\n                                    : keccak256(\\n                                        \\\"Revoke access to Warp Vault? Read more here https://warp.finance/revoke\\\"\\n                                    ),\\n                                _user,\\n                                _contract,\\n                                _status,\\n                                userApprovalNonce[_user]++\\n                            )\\n                        )\\n                    )\\n                );\\n\\n            address recoveredAddress = ecrecover(digest, v, r, s);\\n            require(recoveredAddress == _user, \\\"INVALID_SIGNATURE\\\");\\n        }\\n\\n        userApprovedContracts[_user][_contract] = _status;\\n\\n        emit Approval(_user, _contract, _status);\\n    }\\n\\n    /// @notice pause vault actions\\n    function pause() external onlyOwner {\\n        _pause();\\n    }\\n\\n    /// @notice unpause vault actions\\n    function unpause() external onlyOwner {\\n        _unpause();\\n    }\\n\\n    /// @notice Deposit an amount of `token`\\n    /// @param _token The ERC-20 token to deposit.\\n    /// @param _from which account to pull the tokens.\\n    /// @param _to which account to push the tokens.\\n    /// @param _amount Token amount in native representation to deposit.\\n    /// @return amountOut The deposit amount in underlying token\\n    /// @return shareOut The deposit amount in vault shares\\n    function deposit(\\n        IERC20 _token,\\n        address _from,\\n        address _to,\\n        uint256 _amount\\n    )\\n        external\\n        override\\n        whenNotPaused\\n        allowed(_from)\\n        nonReentrant\\n        returns (uint256 amountOut, uint256 shareOut)\\n    {\\n        // Checks\\n        require(_to != address(0), \\\"INVALID_TO_ADDRESS\\\");\\n\\n        // calculate shares\\n        amountOut = _amount;\\n        shareOut = toShare(_token, _amount, false);\\n\\n        // transfer appropriate amount of underlying from _from to vault\\n        _token.safeTransferFrom(_from, address(this), _amount);\\n\\n        balanceOf[_token][_to] = balanceOf[_token][_to] + shareOut;\\n\\n        TotalBase storage total = totals[_token];\\n        total.totalUnderlyingDeposit += _amount;\\n        total.totalSharesMinted += shareOut;\\n\\n        emit Deposit(_token, _from, _to, _amount, shareOut);\\n    }\\n\\n    /// @notice Withdraw the underlying share of `token` from a user account.\\n    /// @param _token The ERC-20 token to withdraw.\\n    /// @param _from which user to pull the tokens.\\n    /// @param _to which user to push the tokens.\\n    /// @param _shares of shares to withdraw\\n    /// @return amountOut The amount of underlying transferred\\n    function withdraw(\\n        IERC20 _token,\\n        address _from,\\n        address _to,\\n        uint256 _shares\\n    ) external override whenNotPaused allowed(_from) nonReentrant returns (uint256 amountOut) {\\n        // Checks\\n        require(_to != address(0), \\\"INVALID_TO_ADDRESS\\\");\\n\\n        amountOut = toUnderlying(_token, _shares);\\n        balanceOf[_token][_from] = balanceOf[_token][_from] - _shares;\\n\\n        TotalBase storage total = totals[_token];\\n\\n        total.totalUnderlyingDeposit -= amountOut;\\n        total.totalSharesMinted -= _shares;\\n\\n        // prevents the ratio from being reset\\n        require(\\n            total.totalSharesMinted >= MINIMUM_SHARE_BALANCE || total.totalSharesMinted == 0,\\n            \\\"INVALID_RATIO\\\"\\n        );\\n\\n        _token.safeTransfer(_to, amountOut);\\n\\n        emit Withdraw(_token, _from, _to, _shares, amountOut);\\n    }\\n\\n    /// @notice Transfer share of `token` to another account\\n    /// @param _token The ERC-20 token to transfer.\\n    /// @param _from which user to pull the tokens.\\n    /// @param _to which user to push the tokens.\\n    /// @param _shares of shares to transfer\\n    function transfer(\\n        IERC20 _token,\\n        address _from,\\n        address _to,\\n        uint256 _shares\\n    ) external override whenNotPaused allowed(_from) {\\n        _transfer(_token, _from, _to, _shares);\\n    }\\n\\n    /// @notice accept transfer of control\\n    function acceptOwnership() external {\\n        require(msg.sender == newOwner, \\\"invalid owner\\\");\\n\\n        // emit event before state change to do not trigger null address\\n        emit OwnershipAccepted(owner, newOwner, block.timestamp);\\n\\n        owner = newOwner;\\n        newOwner = address(0);\\n    }\\n\\n    /// @notice Transfer control from current owner address to another\\n    /// @param _newOwner The new team\\n    function transferOwnership(address _newOwner) external onlyOwner {\\n        require(_newOwner != address(0), \\\"INVALID_NEW_OWNER\\\");\\n        newOwner = _newOwner;\\n        emit TransferControl(_newOwner, block.timestamp);\\n    }\\n\\n    function _transfer(\\n        IERC20 _token,\\n        address _from,\\n        address _to,\\n        uint256 _shares\\n    ) internal {\\n        require(_to != address(0), \\\"INVALID_TO_ADDRESS\\\");\\n        // Effects\\n        balanceOf[_token][_from] = balanceOf[_token][_from] - _shares;\\n        balanceOf[_token][_to] = balanceOf[_token][_to] + _shares;\\n        emit Transfer(_token, _from, _to, _shares);\\n    }\\n\\n    /// @notice The amount of currency available to be lent.\\n    /// @param _token The loan currency.\\n    /// @return The amount of `token` that can be borrowed.\\n    function maxFlashLoan(address _token) external view override returns (uint256) {\\n        return totals[IERC20(_token)].totalUnderlyingDeposit;\\n    }\\n\\n    /// @notice The fee to be charged for a given loan.\\n    /// @param // _token The loan currency.\\n    /// @param _amount The amount of tokens lent.\\n    /// @return The amount of `token` to be charged for the loan, on top of the returned principal.\\n    function flashFee(address, uint256 _amount) public view override returns (uint256) {\\n        return (_amount * flashLoanRate) / 1e18;\\n    }\\n\\n    /// @notice Initiate a flash loan.\\n    /// @param _receiver The receiver of the tokens in the loan, and the receiver of the callback.\\n    /// @param _token The loan currency.\\n    /// @param _amount The amount of tokens lent.\\n    /// @param _data Arbitrary data structure, intended to contain user-defined parameters.\\n    function flashLoan(\\n        IERC3156FlashBorrower _receiver,\\n        address _token,\\n        uint256 _amount,\\n        bytes calldata _data\\n    ) external override nonReentrant returns (bool) {\\n        require(totals[IERC20(_token)].totalUnderlyingDeposit >= _amount, \\\"Not enough balance\\\");\\n\\n        IERC20 token = IERC20(_token);\\n\\n        uint256 tokenBalBefore = token.balanceOf(address(this));\\n        token.safeTransfer(address(_receiver), _amount);\\n\\n        uint256 fee = flashFee(_token, _amount);\\n        require(\\n            _receiver.onFlashLoan(msg.sender, _token, _amount, fee, _data) ==\\n                FLASHLOAN_CALLBACK_SUCCESS,\\n            \\\"IERC3156: Callback failed\\\"\\n        );\\n\\n        // receive loans and fees\\n        token.safeTransferFrom(address(_receiver), address(this), _amount + fee);\\n\\n        uint256 receivedFees = token.balanceOf(address(this)) - tokenBalBefore;\\n        require(receivedFees >= fee, \\\"not enough fees\\\");\\n\\n        totals[IERC20(_token)].totalUnderlyingDeposit += fee;\\n\\n        emit FlashLoan(msg.sender, token, _amount, fee, address(_receiver));\\n\\n        return true;\\n    }\\n\\n    /// @dev Update the flashloan rate charged, only owner can call\\n    /// @param _newRate The ERC-20 token.\\n    function updateFlashloanRate(uint256 _newRate) external onlyOwner {\\n        require(_newRate < MAX_FLASHLOAN_RATE, \\\"invalid rate\\\");\\n        flashLoanRate = _newRate;\\n        emit UpdateFlashLoanRate(_newRate);\\n    }\\n\\n    /// @dev Helper function to represent an `amount` of `token` in shares.\\n    /// @param _token The ERC-20 token.\\n    /// @param _amount The `token` amount.\\n    /// @param _ceil If to ceil the amount or not\\n    /// @return share The token amount represented in shares.\\n    function toShare(\\n        IERC20 _token,\\n        uint256 _amount,\\n        bool _ceil\\n    ) public view override returns (uint256 share) {\\n        TotalBase storage total = totals[_token];\\n\\n        uint256 currentTotal = total.totalSharesMinted;\\n        if (currentTotal > 0) {\\n            uint256 currentUnderlyingBalance = total.totalUnderlyingDeposit;\\n            share = (_amount * currentTotal) / currentUnderlyingBalance;\\n\\n            if (_ceil && ((share * currentUnderlyingBalance) / currentTotal) < _amount) {\\n                share = share + 1;\\n            }\\n        } else {\\n            share = _amount;\\n        }\\n    }\\n\\n    /// @notice Helper function represent shares back into the `token` amount.\\n    /// @param _token The ERC-20 token.\\n    /// @param _share The amount of shares.\\n    /// @return amount The share amount back into native representation.\\n    function toUnderlying(IERC20 _token, uint256 _share)\\n        public\\n        view\\n        override\\n        returns (uint256 amount)\\n    {\\n        TotalBase storage total = totals[_token];\\n        amount = (_share * total.totalUnderlyingDeposit) / total.totalSharesMinted;\\n    }\\n\\n    /// @notice rescueFunds Enables us to rescue funds that are not tracked\\n    /// @param _token ERC20 token to rescue funds from\\n    function rescueFunds(IERC20 _token) external nonReentrant onlyOwner {\\n        uint256 currentBalance = _token.balanceOf(address(this));\\n        uint256 amount = currentBalance - totals[_token].totalUnderlyingDeposit;\\n        _token.safeTransfer(owner, amount);\\n\\n        emit RescueFunds(_token, amount);\\n    }\\n}\",\"keccak256\":\"0x70cdd077e70a2b9579c8e4ba869da0da2739c786b599c18e7099837b35416a12\",\"license\":\"MIT\"},\"contracts/VaultBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.1;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./util/ReentrancyGuard.sol\\\";\\nimport { Initializable } from \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport { UUPSProxiable } from \\\"./upgradability/UUPSProxiable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"./interfaces/IBSVault.sol\\\";\\n\\nabstract contract VaultStorageV1 is ReentrancyGuard, UUPSProxiable, Pausable, IBSVault {\\n    struct TotalBase {\\n        uint256 totalUnderlyingDeposit; // total underlying asset deposit\\n        uint256 totalSharesMinted; // total vault shares minted\\n    }\\n\\n    /// @notice the flashloan rate to charge for flash loans\\n    uint256 public flashLoanRate;\\n\\n    /// @notice the address that access to perform `admin` functions\\n    address public owner;\\n\\n    /// @dev the address that access to perform `admin` functions\\n    address public newOwner;\\n\\n    /// @dev cached domain separator\\n    bytes32 internal _CACHED_DOMAIN_SEPARATOR;\\n\\n    /// @notice mapping of token asset to user address and balance\\n    mapping(IERC20 => mapping(address => uint256)) public override balanceOf;\\n\\n    /// @notice mapping of user to contract to approval status\\n    mapping(address => mapping(address => bool)) public userApprovedContracts;\\n\\n    /// @notice mapping of user to approval nonce\\n    mapping(address => uint256) public userApprovalNonce;\\n\\n    /// @notice mapping to contract to whitelist status\\n    mapping(address => bool) public allowedContracts;\\n\\n    /// @notice mapping of asset to total deposit and shares minted\\n    mapping(IERC20 => TotalBase) public totals;\\n    \\n}\\n\\nabstract contract VaultBase is VaultStorageV1  {\\n    /// @notice vault name\\n    string public constant name = \\\"WarpVault v1\\\";\\n\\n    /// @notice vault version\\n    string public constant version = \\\"1\\\";\\n\\n    /// @dev vault approval message digest\\n    bytes32 internal constant _VAULT_APPROVAL_SIGNATURE_TYPE_HASH =\\n        keccak256(\\n            \\\"VaultAccessApproval(bytes32 warning,address user,address contract,bool approved,uint256 nonce)\\\"\\n        );\\n\\n    /// @dev EIP712 type hash\\n    bytes32 internal constant _EIP712_TYPE_HASH =\\n        keccak256(\\n            \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"\\n        );\\n    \\n    /// @dev ERC3156 constant for flashloan callback success\\n    bytes32 internal constant FLASHLOAN_CALLBACK_SUCCESS =\\n        keccak256(\\\"ERC3156FlashBorrower.onFlashLoan\\\");\\n    \\n    /// @notice max flashlaon rate 10%\\n    uint256 public constant MAX_FLASHLOAN_RATE = 1e17;\\n\\n    /// @dev minimum vault share balance\\n    uint256 internal constant MINIMUM_SHARE_BALANCE = 1000; // To prevent the ratio going off\\n\\n    bytes32 internal immutable _HASHED_NAME;\\n    bytes32 internal immutable _HASHED_VERSION;\\n    uint256 private immutable _CACHED_CHAIN_ID;\\n\\n\\n    constructor() {\\n        _HASHED_NAME = keccak256(bytes(name));\\n        _HASHED_VERSION = keccak256(bytes(version));\\n        _CACHED_CHAIN_ID = _getChainId();\\n    }\\n\\n    function _buildDomainSeparator(\\n        bytes32 _typeHash,\\n        bytes32 _name,\\n        bytes32 _version\\n    ) internal view returns (bytes32) {\\n        return keccak256(abi.encode(_typeHash, _name, _version, _getChainId(), address(this)));\\n    }\\n\\n    function _domainSeparatorV4() internal view returns (bytes32) {\\n        if (_getChainId() == _CACHED_CHAIN_ID) {\\n            return _CACHED_DOMAIN_SEPARATOR;\\n        } else {\\n            return _buildDomainSeparator(_EIP712_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION);\\n        }\\n    }\\n\\n    function _getChainId() private view returns (uint256 chainId) {\\n        // solhint-disable-next-line\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            chainId := chainid()\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xbe5f817ee22d3a6a5a23fe854637be7f08816d44c93cd77d3d6e4b81bad99150\",\"license\":\"MIT\"},\"contracts/interfaces/IBSVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.1;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./IERC3156FlashLender.sol\\\";\\n\\ninterface IBSVault is IERC3156FlashLender {\\n    // ************** //\\n    // *** EVENTS *** //\\n    // ************** //\\n\\n    /// @notice Emitted on deposit\\n    /// @param token being deposited\\n    /// @param from address making the depsoit\\n    /// @param to address to credit the tokens being deposited\\n    /// @param amount being deposited\\n    /// @param shares the represent the amount deposited in the vault\\n    event Deposit(\\n        IERC20 indexed token,\\n        address indexed from,\\n        address indexed to,\\n        uint256 amount,\\n        uint256 shares\\n    );\\n\\n    /// @notice Emitted on withdraw\\n    /// @param token being deposited\\n    /// @param from address making the depsoit\\n    /// @param to address to credit the tokens being withdrawn\\n    /// @param amount Amount of underlying being withdrawn\\n    /// @param shares the represent the amount withdraw from the vault\\n    event Withdraw(\\n        IERC20 indexed token,\\n        address indexed from,\\n        address indexed to,\\n        uint256 shares,\\n        uint256 amount\\n    );\\n\\n    event Transfer(IERC20 indexed token, address indexed from, address indexed to, uint256 amount);\\n\\n    event FlashLoan(\\n        address indexed borrower,\\n        IERC20 indexed token,\\n        uint256 amount,\\n        uint256 feeAmount,\\n        address indexed receiver\\n    );\\n\\n    event TransferControl(address _newTeam, uint256 timestamp);\\n\\n    event UpdateFlashLoanRate(uint256 newRate);\\n\\n    event Approval(address indexed user, address indexed allowed, bool status);\\n\\n    event OwnershipAccepted(address prevOwner, address newOwner, uint256 timestamp);\\n\\n    event RegisterProtocol(address sender);\\n\\n    event AllowContract(address whitelist, bool status);\\n\\n    event RescueFunds(IERC20 token, uint256 amount);\\n\\n    // ************** //\\n    // *** FUNCTIONS *** //\\n    // ************** //\\n\\n    function initialize(uint256 _flashLoanRate, address _owner) external;\\n\\n    function approveContract(\\n        address _user,\\n        address _contract,\\n        bool _status,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    function deposit(\\n        IERC20 _token,\\n        address _from,\\n        address _to,\\n        uint256 _amount\\n    ) external returns (uint256, uint256);\\n\\n    function withdraw(\\n        IERC20 _token,\\n        address _from,\\n        address _to,\\n        uint256 _amount\\n    ) external returns (uint256);\\n\\n    function balanceOf(IERC20, address) external view returns (uint256);\\n\\n    function transfer(\\n        IERC20 _token,\\n        address _from,\\n        address _to,\\n        uint256 _shares\\n    ) external;\\n\\n    function toShare(\\n        IERC20 token,\\n        uint256 amount,\\n        bool ceil\\n    ) external view returns (uint256);\\n\\n    function toUnderlying(IERC20 token, uint256 share) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc0323afa216ff7958b03edc38475bd0c8b56c7866a66429bf28debeeea22a3ff\",\"license\":\"MIT\"},\"contracts/interfaces/IERC3156FlashBorrower.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.1;\\n\\ninterface IERC3156FlashBorrower {\\n    /**\\n     * @dev Receive a flash loan.\\n     * @param initiator The initiator of the loan.\\n     * @param token The loan currency.\\n     * @param amount The amount of tokens lent.\\n     * @param fee The additional amount of tokens to repay.\\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\\n     * @return The keccak256 hash of \\\"ERC3156FlashBorrower.onFlashLoan\\\"\\n     */\\n    function onFlashLoan(\\n        address initiator,\\n        address token,\\n        uint256 amount,\\n        uint256 fee,\\n        bytes calldata data\\n    ) external returns (bytes32);\\n}\\n\",\"keccak256\":\"0xc72afde3ab27c13b3437769c92b10e48dc143565ba2bcf9e78f6713d4695d924\",\"license\":\"MIT\"},\"contracts/interfaces/IERC3156FlashLender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.1;\\nimport \\\"./IERC3156FlashBorrower.sol\\\";\\n\\ninterface IERC3156FlashLender {\\n    /**\\n     * @dev The amount of currency available to be lent.\\n     * @param token The loan currency.\\n     * @return The amount of `token` that can be borrowed.\\n     */\\n    function maxFlashLoan(address token) external view returns (uint256);\\n\\n    /**\\n     * @dev The fee to be charged for a given loan.\\n     * @param token The loan currency.\\n     * @param amount The amount of tokens lent.\\n     * @return The amount of `token` to be charged for the loan, on top of the returned principal.\\n     */\\n    function flashFee(address token, uint256 amount) external view returns (uint256);\\n\\n    /**\\n     * @dev Initiate a flash loan.\\n     * @param receiver The receiver of the tokens in the loan, and the receiver of the callback.\\n     * @param token The loan currency.\\n     * @param amount The amount of tokens lent.\\n     * @param data Arbitrary data structure, intended to contain user-defined parameters.\\n     */\\n    function flashLoan(\\n        IERC3156FlashBorrower receiver,\\n        address token,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x381589754fc2917129ff2192df23588009fecb73f6df12bc9218dd731d25758d\",\"license\":\"MIT\"},\"contracts/upgradability/UUPSProxiable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.1;\\n\\nimport {UUPSUtils} from \\\"./UUPSUtils.sol\\\";\\nimport {Initializable} from \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev UUPS (Universal Upgradeable Proxy Standard) Proxiable contract.\\n */\\nabstract contract UUPSProxiable is Initializable {\\n    /**\\n     * @dev Get current implementation code address.\\n     */\\n    function getCodeAddress() public view returns (address codeAddress) {\\n        return UUPSUtils.implementation();\\n    }\\n\\n    function updateCode(address newAddress) external virtual;\\n\\n    /**\\n     * @dev Proxiable UUID marker function.\\n     *      This would help to avoid wrong logic contract to be used for upgrading.\\n     */\\n    function proxiableUUID() public view virtual returns (bytes32);\\n\\n    /**\\n     * @dev Update code address function.\\n     *      It is internal, so the derived contract could setup its own permission logic.\\n     */\\n    function _updateCodeAddress(address newAddress) internal {\\n        require(UUPSUtils.implementation() != address(0), \\\"UUPSProxiable: not upgradable\\\");\\n        require(\\n            proxiableUUID() == UUPSProxiable(newAddress).proxiableUUID(),\\n            \\\"UUPSProxiable: not compatible logic\\\"\\n        );\\n        UUPSUtils.setImplementation(newAddress);\\n        emit CodeUpdated(proxiableUUID(), newAddress);\\n    }\\n\\n    event CodeUpdated(bytes32 uuid, address codeAddress);\\n}\\n\",\"keccak256\":\"0xd569c1730923697f98cd3d4d74d21749d14ff6bea8b763fcb98343a17a43f535\",\"license\":\"MIT\"},\"contracts/upgradability/UUPSUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.1;\\n\\n/**\\n * @title UUPS (Universal Upgradeable Proxy Standard) Shared Library\\n */\\nlibrary UUPSUtils {\\n    /**\\n     * @dev Implementation slot constant.\\n     * Using https://eips.ethereum.org/EIPS/eip-1967 standard\\n     * Storage slot 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\\n     * (obtained as bytes32(uint256(keccak256('eip1967.proxy.implementation')) - 1)).\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT =\\n        0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /// @dev Get implementation address.\\n    function implementation() internal view returns (address impl) {\\n        assembly {\\n            // solium-disable-line\\n            impl := sload(_IMPLEMENTATION_SLOT)\\n        }\\n    }\\n\\n    /// @dev Set new implementation address.\\n    function setImplementation(address codeAddress) internal {\\n        assembly {\\n            // solium-disable-line\\n            sstore(_IMPLEMENTATION_SLOT, codeAddress)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x125441f574989269c1e471e61085d33d064903e006f8b29e81eba2b79e2be1da\",\"license\":\"MIT\"},\"contracts/util/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __init_ReentrancyGuard() internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xeb4dba94bd36fc0747c203c98109139c0545fc278498e504d44cf5c9a91f8144\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e060405234801561001057600080fd5b506001805462ff000019168155604080518082018252600c81526b576172705661756c7420763160a01b6020918201527fa40fef20e589d79043a3159d07cb3250ae0cc1485bcb2d436b4b7dc47d197c5c6080528151808301909252918152603160f81b9101527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660a0526100a36100ab565b60c0526100af565b4690565b60805160a05160c0516128da6100ec60003960006117d80152600081816113a40152611855015260008181611383015261183401526128da6000f3fe608060405234801561001057600080fd5b50600436106101ef5760003560e01c80635cffe9de1161010f578063d78af5f1116100a2578063e53b201711610071578063e53b2017146103d1578063f18d03cc146103e4578063f2fde38b146103f7578063f7888aec1461040a576101ef565b8063d78af5f114610385578063d9d98ce414610398578063da35a26f146103ab578063da5139ca146103be576101ef565b80638da5cb5b116100de5780638da5cb5b1461035a578063c6b45dfa14610362578063d4ee1d901461036a578063d728e00514610372576101ef565b80635cffe9de14610324578063613255ab1461033757806379ba50971461034a5780638456cb5914610352576101ef565b806346951954116101875780635299493b116101565780635299493b146102f957806352d1902d1461030c57806354fd4d50146103145780635c975abb1461031c576101ef565b8063469519541461029e5780634ffe34db146102b157806350d75d25146102c457806351e0e26b146102d9576101ef565b80631e43a7a1116101c35780631e43a7a1146102665780631fd1ffde1461026e5780633f21c1b4146102835780633f4ba83a14610296576101ef565b8062f5ee4d146101f45780630284c3f51461021d57806306fdde031461023e5780630b620b8114610253575b600080fd5b610207610202366004611d67565b61041d565b6040516102149190612138565b60405180910390f35b61023061022b366004611ecb565b61042f565b6040516102149291906127a8565b610246610635565b60405161021491906121d6565b610207610261366004611ecb565b61065d565b610207610882565b61028161027c366004611ff6565b610888565b005b610281610291366004611dbb565b610919565b610281610c2f565b6102816102ac366004611d67565b610c63565b6102306102bf366004611d67565b610c99565b6102cc610cb2565b6040516102149190612069565b6102ec6102e7366004611d67565b610cc2565b604051610214919061212d565b610207610307366004611e5a565b610cd7565b610207610d12565b610246610d36565b6102ec610d53565b6102ec610332366004611f5c565b610d62565b610207610345366004611d67565b611096565b6102816110b1565b61028161114f565b6102cc611181565b610207611190565b6102cc61119c565b6102ec610380366004611d83565b6111ab565b610281610393366004611e2d565b6111cb565b6102076103a6366004611e5a565b61127d565b6102816103b936600461200e565b6112a7565b6102076103cc366004611f1b565b611402565b6102816103df366004611d67565b611484565b6102816103f2366004611ecb565b6115dc565b610281610405366004611d67565b611670565b610207610418366004611eb9565b61170d565b60086020526000908152604090205481565b60008061043a610d53565b156104605760405162461bcd60e51b8152600401610457906124ae565b60405180910390fd5b84336001600160a01b03821614806104a057506001600160a01b038116600090815260076020908152604080832033845290915290205460ff1615156001145b6104bc5760405162461bcd60e51b81526004016104579061250c565b600260005414156104df5760405162461bcd60e51b8152600401610457906126df565b60026000556001600160a01b03851661050a5760405162461bcd60e51b8152600401610457906123ac565b83925061051987856000611402565b91506105306001600160a01b03881687308761172a565b6001600160a01b038088166000908152600660209081526040808320938916835292905220546105619083906127b6565b6001600160a01b038089166000818152600660209081526040808320948b16835293815283822094909455908152600a90925281208054909186918391906105aa9084906127b6565b92505081905550828160010160008282546105c591906127b6565b92505081905550856001600160a01b0316876001600160a01b0316896001600160a01b03167f5fe47ed6d4225326d3303476197d782ded5a4e9c14f479dc9ec4992af4e85d59888760405161061b9291906127a8565b60405180910390a450506001600055909590945092505050565b6040518060400160405280600c81526020016b576172705661756c7420763160a01b81525081565b6000610667610d53565b156106845760405162461bcd60e51b8152600401610457906124ae565b83336001600160a01b03821614806106c457506001600160a01b038116600090815260076020908152604080832033845290915290205460ff1615156001145b6106e05760405162461bcd60e51b81526004016104579061250c565b600260005414156107035760405162461bcd60e51b8152600401610457906126df565b60026000556001600160a01b03841661072e5760405162461bcd60e51b8152600401610457906123ac565b6107388684610cd7565b6001600160a01b038088166000908152600660209081526040808320938a168352929052205490925061076c90849061280d565b6001600160a01b038088166000818152600660209081526040808320948b16835293815283822094909455908152600a90925281208054909184918391906107b590849061280d565b92505081905550838160010160008282546107d0919061280d565b909155505060018101546103e81115806107ec57506001810154155b6108085760405162461bcd60e51b81526004016104579061258f565b61081c6001600160a01b03881686856117b5565b846001600160a01b0316866001600160a01b0316886001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db878760405161086b9291906127a8565b60405180910390a450506001600055949350505050565b60025481565b6003546001600160a01b031633146108b25760405162461bcd60e51b815260040161045790612716565b67016345785d8a000081106108d95760405162461bcd60e51b8152600401610457906125b6565b60028190556040517f351e11b7eebc302a6aa0cf8fb6ed5318359a632eecf29a1cafdf96ee7257be819061090e908390612138565b60405180910390a150565b6001600160a01b03851661093f5760405162461bcd60e51b81526004016104579061273a565b6001600160a01b0386166109655760405162461bcd60e51b81526004016104579061241a565b60ff8316158015610974575081155b801561097e575080155b15610a3a576001600160a01b03861633146109ab5760405162461bcd60e51b81526004016104579061263a565b333214156109cb5760405162461bcd60e51b81526004016104579061234e565b846001600160a01b0316866001600160a01b031614156109fd5760405162461bcd60e51b815260040161045790612283565b6001600160a01b03851660009081526009602052604090205460ff16610a355760405162461bcd60e51b815260040161045790612771565b610bbb565b6000610a446117d4565b7fe8879d0159a5862e68322a449d14dcfb21ad39e0c3dc66f88aff16b87aa27eae86610a90577f31d77d35dcd597e2453861d123e3d7ee551c84d42d8d97544835a74f1ccb251b610ab2565b7f9d3cc82da8126179611840997002f7d09633ad258b9c11d6e1dccc7e1ad477415b6001600160a01b038a16600090815260086020526040812080548c928c928c9291610adc83612850565b91905055604051602001610af596959493929190612158565b60405160208183030381529060405280519060200120604051602001610b1c92919061204e565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051610b5994939291906121b8565b6020604051602081039080840390855afa158015610b7b573d6000803e3d6000fd5b505050602060405103519050876001600160a01b0316816001600160a01b031614610bb85760405162461bcd60e51b815260040161045790612375565b50505b6001600160a01b038681166000818152600760209081526040808320948a168084529490915290819020805460ff1916881515179055517f1d3e246ebbc933bf65d3290db9f93d67ab91a12d2b19308a35806e04d1c174c590610c1f90889061212d565b60405180910390a3505050505050565b6003546001600160a01b03163314610c595760405162461bcd60e51b815260040161045790612716565b610c61611880565b565b6003546001600160a01b03163314610c8d5760405162461bcd60e51b815260040161045790612716565b610c96816118f0565b50565b600a602052600090815260409020805460019091015482565b6000610cbc6119f8565b90505b90565b60096020526000908152604090205460ff1681565b6001600160a01b0382166000908152600a6020526040812060018101548154610d0090856127ee565b610d0a91906127ce565b949350505050565b7f789f0daca1cd17baa821e8d7454225d50b9f3e7c22acb67c2b2fff4f686a128290565b604051806040016040528060018152602001603160f81b81525081565b60015462010000900460ff1690565b600060026000541415610d875760405162461bcd60e51b8152600401610457906126df565b600260009081556001600160a01b0386168152600a6020526040902054841115610dc35760405162461bcd60e51b815260040161045790612440565b6040516370a0823160e01b815285906000906001600160a01b038316906370a0823190610df4903090600401612069565b60206040518083038186803b158015610e0c57600080fd5b505afa158015610e20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e449190611ea1565b9050610e5a6001600160a01b03831689886117b5565b6000610e66888861127d565b90507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9896001600160a01b03166323e30c8b338b8b868c8c6040518763ffffffff1660e01b8152600401610ebf969594939291906120a1565b602060405180830381600087803b158015610ed957600080fd5b505af1158015610eed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f119190611ea1565b14610f2e5760405162461bcd60e51b8152600401610457906122ba565b610f4f8930610f3d848b6127b6565b6001600160a01b03871692919061172a565b600082846001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610f7e9190612069565b60206040518083038186803b158015610f9657600080fd5b505afa158015610faa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fce9190611ea1565b610fd8919061280d565b905081811015610ffa5760405162461bcd60e51b815260040161045790612477565b6001600160a01b0389166000908152600a6020526040812080548492906110229084906127b6565b92505081905550896001600160a01b0316846001600160a01b0316336001600160a01b03167f581cf1fe7a440a4f68b6fdeba82ea38faf67f97ec14d5d9831a450e79a3849028b866040516110789291906127a8565b60405180910390a46001945050505050600160005595945050505050565b6001600160a01b03166000908152600a602052604090205490565b6004546001600160a01b031633146110db5760405162461bcd60e51b8152600401610457906124e5565b6003546004546040517f3996db4523d078738f597d29c05515ab90a28170fdd8dd6aeea6b6af99700bd292611120926001600160a01b0391821692911690429061207d565b60405180910390a160048054600380546001600160a01b03199081166001600160a01b03841617909155169055565b6003546001600160a01b031633146111795760405162461bcd60e51b815260040161045790612716565b610c61611a1d565b6003546001600160a01b031681565b67016345785d8a000081565b6004546001600160a01b031681565b600760209081526000928352604080842090915290825290205460ff1681565b6003546001600160a01b031633146111f55760405162461bcd60e51b815260040161045790612716565b6001600160a01b03821661121b5760405162461bcd60e51b8152600401610457906123e3565b6001600160a01b03821660009081526009602052604090819020805460ff1916831515179055517f868ef4c4efa656ac9fe74e223335211b2da76220bf70e4a05c30c6a857e89e0d9061127190849084906120f9565b60405180910390a15050565b6000670de0b6b3a76400006002548361129691906127ee565b6112a091906127ce565b9392505050565b600154610100900460ff16806112c0575060015460ff16155b6112dc5760405162461bcd60e51b815260040161045790612532565b600154610100900460ff16158015611306576001805460ff1961ff00199091166101001716811790555b6001600160a01b03821661132c5760405162461bcd60e51b8152600401610457906125dc565b67016345785d8a0000600254106113555760405162461bcd60e51b8152600401610457906122f1565b61135d611a7c565b6113c87f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611a83565b6005556002839055600380546001600160a01b0319166001600160a01b03841617905580156113fd576001805461ff00191690555b505050565b6001600160a01b0383166000908152600a60205260408120600181015480156114775781548061143283886127ee565b61143c91906127ce565b935084801561145e5750858261145283876127ee565b61145c91906127ce565b105b156114715761146e8460016127b6565b93505b5061147b565b8492505b50509392505050565b600260005414156114a75760405162461bcd60e51b8152600401610457906126df565b60026000556003546001600160a01b031633146114d65760405162461bcd60e51b815260040161045790612716565b6040516370a0823160e01b81526000906001600160a01b038316906370a0823190611505903090600401612069565b60206040518083038186803b15801561151d57600080fd5b505afa158015611531573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115559190611ea1565b6001600160a01b0383166000908152600a60205260408120549192509061157c908361280d565b600354909150611599906001600160a01b038581169116836117b5565b7f891d905c747e7308f7e952ff603f2ac799bc5abc150b5792024a59b5c96273d283826040516115ca929190612114565b60405180910390a15050600160005550565b6115e4610d53565b156116015760405162461bcd60e51b8152600401610457906124ae565b82336001600160a01b038216148061164157506001600160a01b038116600090815260076020908152604080832033845290915290205460ff1615156001145b61165d5760405162461bcd60e51b81526004016104579061250c565b61166985858585611ac4565b5050505050565b6003546001600160a01b0316331461169a5760405162461bcd60e51b815260040161045790612716565b6001600160a01b0381166116c05760405162461bcd60e51b815260040161045790612317565b600480546001600160a01b0319166001600160a01b0383161790556040517f75ec58ed4c3b4778d64c8fb2682d99b9844d486931205289f0c8e9951eaab8329061090e9083904290612114565b600660209081526000928352604080842090915290825290205481565b6117af846323b872dd60e01b85858560405160240161174b9392919061207d565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611bc4565b50505050565b6113fd8363a9059cbb60e01b848460405160240161174b929190612114565b60007f00000000000000000000000000000000000000000000000000000000000000006117ff611c53565b141561180e5750600554610cbf565b6118797f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611a83565b9050610cbf565b611888610d53565b6118a45760405162461bcd60e51b81526004016104579061224c565b6001805462ff0000191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6118d9611c57565b6040516118e69190612069565b60405180910390a1565b60006118fa6119f8565b6001600160a01b031614156119215760405162461bcd60e51b815260040161045790612603565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561195a57600080fd5b505afa15801561196e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119929190611ea1565b61199a610d12565b146119b75760405162461bcd60e51b815260040161045790612209565b6119c081611c5b565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc6119e9610d12565b8260405161090e929190612141565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b611a25610d53565b15611a425760405162461bcd60e51b8152600401610457906124ae565b6001805462ff00001916620100001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118d9611c57565b6001600055565b6000838383611a90611c53565b30604051602001611aa595949392919061218c565b6040516020818303038152906040528051906020012090509392505050565b6001600160a01b038216611aea5760405162461bcd60e51b8152600401610457906123ac565b6001600160a01b03808516600090815260066020908152604080832093871683529290522054611b1b90829061280d565b6001600160a01b03858116600090815260066020908152604080832088851684529091528082209390935590841681522054611b589082906127b6565b6001600160a01b0380861660008181526006602090815260408083208886168085529252918290209490945551918616917fd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f90611bb6908690612138565b60405180910390a450505050565b6000611c19826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c7f9092919063ffffffff16565b8051909150156113fd5780806020019051810190611c379190611e85565b6113fd5760405162461bcd60e51b815260040161045790612695565b4690565b3390565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6060610d0a848460008585611c9385611d28565b611caf5760405162461bcd60e51b81526004016104579061265e565b600080866001600160a01b03168587604051611ccb9190612032565b60006040518083038185875af1925050503d8060008114611d08576040519150601f19603f3d011682016040523d82523d6000602084013e611d0d565b606091505b5091509150611d1d828286611d2e565b979650505050505050565b3b151590565b60608315611d3d5750816112a0565b825115611d4d5782518084602001fd5b8160405162461bcd60e51b815260040161045791906121d6565b600060208284031215611d78578081fd5b81356112a081612881565b60008060408385031215611d95578081fd5b8235611da081612881565b91506020830135611db081612881565b809150509250929050565b60008060008060008060c08789031215611dd3578182fd5b8635611dde81612881565b95506020870135611dee81612881565b94506040870135611dfe81612896565b9350606087013560ff81168114611e13578283fd5b9598949750929560808101359460a0909101359350915050565b60008060408385031215611e3f578182fd5b8235611e4a81612881565b91506020830135611db081612896565b60008060408385031215611e6c578182fd5b8235611e7781612881565b946020939093013593505050565b600060208284031215611e96578081fd5b81516112a081612896565b600060208284031215611eb2578081fd5b5051919050565b60008060408385031215611d95578182fd5b60008060008060808587031215611ee0578384fd5b8435611eeb81612881565b93506020850135611efb81612881565b92506040850135611f0b81612881565b9396929550929360600135925050565b600080600060608486031215611f2f578283fd5b8335611f3a81612881565b9250602084013591506040840135611f5181612896565b809150509250925092565b600080600080600060808688031215611f73578283fd5b8535611f7e81612881565b94506020860135611f8e81612881565b935060408601359250606086013567ffffffffffffffff80821115611fb1578283fd5b818801915088601f830112611fc4578283fd5b813581811115611fd2578384fd5b896020828501011115611fe3578384fd5b9699959850939650602001949392505050565b600060208284031215612007578081fd5b5035919050565b60008060408385031215612020578182fd5b823591506020830135611db081612881565b60008251612044818460208701612824565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a060808301528260a0830152828460c084013781830160c090810191909152601f909201601f1916010195945050505050565b6001600160a01b039290921682521515602082015260400190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b95865260208601949094526001600160a01b039283166040860152911660608401521515608083015260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b60006020825282518060208401526121f5816040850160208701612824565b601f01601f19169190910160400192915050565b60208082526023908201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60408201526267696360e81b606082015260800190565b60208082526014908201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604082015260600190565b6020808252600f908201527f494e56414c49445f415050524f56450000000000000000000000000000000000604082015260600190565b60208082526019908201527f49455243333135363a2043616c6c6261636b206661696c656400000000000000604082015260600190565b6020808252600c908201526b494e56414c49445f5241544560a01b604082015260600190565b60208082526011908201527f494e56414c49445f4e45575f4f574e4552000000000000000000000000000000604082015260600190565b6020808252600d908201526c13d3931657d0d3d395149050d5609a1b604082015260600190565b60208082526011908201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604082015260600190565b60208082526012908201527f494e56414c49445f544f5f414444524553530000000000000000000000000000604082015260600190565b6020808252600f908201527f696e76616c69645f616464726573730000000000000000000000000000000000604082015260600190565b6020808252600c908201526b24a72b20a624a22faaa9a2a960a11b604082015260600190565b60208082526012908201527f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000604082015260600190565b6020808252600f908201527f6e6f7420656e6f75676820666565730000000000000000000000000000000000604082015260600190565b60208082526010908201527f5061757361626c653a2070617573656400000000000000000000000000000000604082015260600190565b6020808252600d908201526c34b73b30b634b21037bbb732b960991b604082015260600190565b6020808252600c908201526b13d3931657d0531313d5d15160a21b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201527f647920696e697469616c697a6564000000000000000000000000000000000000606082015260800190565b6020808252600d908201526c494e56414c49445f524154494f60981b604082015260600190565b6020808252600c908201526b696e76616c6964207261746560a01b604082015260600190565b6020808252600d908201526c24a72b20a624a22fa7aba722a960991b604082015260600190565b6020808252601d908201527f5555505350726f786961626c653a206e6f742075706772616461626c65000000604082015260600190565b6020808252600a90820152692727aa2fa9a2a72222a960b11b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600a908201526927a7262cafa7aba722a960b11b604082015260600190565b60208082526010908201527f494e56414c49445f434f4e545241435400000000000000000000000000000000604082015260600190565b6020808252600f908201527f4e4f545f57484954454c49535445440000000000000000000000000000000000604082015260600190565b918252602082015260400190565b600082198211156127c9576127c961286b565b500190565b6000826127e957634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156128085761280861286b565b500290565b60008282101561281f5761281f61286b565b500390565b60005b8381101561283f578181015183820152602001612827565b838111156117af5750506000910152565b60006000198214156128645761286461286b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610c9657600080fd5b8015158114610c9657600080fdfea264697066735822122040fdb0a2e7fb0b1564cfb541c527cb2ec7d6d8796e64553845a78110dee79fb964736f6c63430008010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101ef5760003560e01c80635cffe9de1161010f578063d78af5f1116100a2578063e53b201711610071578063e53b2017146103d1578063f18d03cc146103e4578063f2fde38b146103f7578063f7888aec1461040a576101ef565b8063d78af5f114610385578063d9d98ce414610398578063da35a26f146103ab578063da5139ca146103be576101ef565b80638da5cb5b116100de5780638da5cb5b1461035a578063c6b45dfa14610362578063d4ee1d901461036a578063d728e00514610372576101ef565b80635cffe9de14610324578063613255ab1461033757806379ba50971461034a5780638456cb5914610352576101ef565b806346951954116101875780635299493b116101565780635299493b146102f957806352d1902d1461030c57806354fd4d50146103145780635c975abb1461031c576101ef565b8063469519541461029e5780634ffe34db146102b157806350d75d25146102c457806351e0e26b146102d9576101ef565b80631e43a7a1116101c35780631e43a7a1146102665780631fd1ffde1461026e5780633f21c1b4146102835780633f4ba83a14610296576101ef565b8062f5ee4d146101f45780630284c3f51461021d57806306fdde031461023e5780630b620b8114610253575b600080fd5b610207610202366004611d67565b61041d565b6040516102149190612138565b60405180910390f35b61023061022b366004611ecb565b61042f565b6040516102149291906127a8565b610246610635565b60405161021491906121d6565b610207610261366004611ecb565b61065d565b610207610882565b61028161027c366004611ff6565b610888565b005b610281610291366004611dbb565b610919565b610281610c2f565b6102816102ac366004611d67565b610c63565b6102306102bf366004611d67565b610c99565b6102cc610cb2565b6040516102149190612069565b6102ec6102e7366004611d67565b610cc2565b604051610214919061212d565b610207610307366004611e5a565b610cd7565b610207610d12565b610246610d36565b6102ec610d53565b6102ec610332366004611f5c565b610d62565b610207610345366004611d67565b611096565b6102816110b1565b61028161114f565b6102cc611181565b610207611190565b6102cc61119c565b6102ec610380366004611d83565b6111ab565b610281610393366004611e2d565b6111cb565b6102076103a6366004611e5a565b61127d565b6102816103b936600461200e565b6112a7565b6102076103cc366004611f1b565b611402565b6102816103df366004611d67565b611484565b6102816103f2366004611ecb565b6115dc565b610281610405366004611d67565b611670565b610207610418366004611eb9565b61170d565b60086020526000908152604090205481565b60008061043a610d53565b156104605760405162461bcd60e51b8152600401610457906124ae565b60405180910390fd5b84336001600160a01b03821614806104a057506001600160a01b038116600090815260076020908152604080832033845290915290205460ff1615156001145b6104bc5760405162461bcd60e51b81526004016104579061250c565b600260005414156104df5760405162461bcd60e51b8152600401610457906126df565b60026000556001600160a01b03851661050a5760405162461bcd60e51b8152600401610457906123ac565b83925061051987856000611402565b91506105306001600160a01b03881687308761172a565b6001600160a01b038088166000908152600660209081526040808320938916835292905220546105619083906127b6565b6001600160a01b038089166000818152600660209081526040808320948b16835293815283822094909455908152600a90925281208054909186918391906105aa9084906127b6565b92505081905550828160010160008282546105c591906127b6565b92505081905550856001600160a01b0316876001600160a01b0316896001600160a01b03167f5fe47ed6d4225326d3303476197d782ded5a4e9c14f479dc9ec4992af4e85d59888760405161061b9291906127a8565b60405180910390a450506001600055909590945092505050565b6040518060400160405280600c81526020016b576172705661756c7420763160a01b81525081565b6000610667610d53565b156106845760405162461bcd60e51b8152600401610457906124ae565b83336001600160a01b03821614806106c457506001600160a01b038116600090815260076020908152604080832033845290915290205460ff1615156001145b6106e05760405162461bcd60e51b81526004016104579061250c565b600260005414156107035760405162461bcd60e51b8152600401610457906126df565b60026000556001600160a01b03841661072e5760405162461bcd60e51b8152600401610457906123ac565b6107388684610cd7565b6001600160a01b038088166000908152600660209081526040808320938a168352929052205490925061076c90849061280d565b6001600160a01b038088166000818152600660209081526040808320948b16835293815283822094909455908152600a90925281208054909184918391906107b590849061280d565b92505081905550838160010160008282546107d0919061280d565b909155505060018101546103e81115806107ec57506001810154155b6108085760405162461bcd60e51b81526004016104579061258f565b61081c6001600160a01b03881686856117b5565b846001600160a01b0316866001600160a01b0316886001600160a01b03167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db878760405161086b9291906127a8565b60405180910390a450506001600055949350505050565b60025481565b6003546001600160a01b031633146108b25760405162461bcd60e51b815260040161045790612716565b67016345785d8a000081106108d95760405162461bcd60e51b8152600401610457906125b6565b60028190556040517f351e11b7eebc302a6aa0cf8fb6ed5318359a632eecf29a1cafdf96ee7257be819061090e908390612138565b60405180910390a150565b6001600160a01b03851661093f5760405162461bcd60e51b81526004016104579061273a565b6001600160a01b0386166109655760405162461bcd60e51b81526004016104579061241a565b60ff8316158015610974575081155b801561097e575080155b15610a3a576001600160a01b03861633146109ab5760405162461bcd60e51b81526004016104579061263a565b333214156109cb5760405162461bcd60e51b81526004016104579061234e565b846001600160a01b0316866001600160a01b031614156109fd5760405162461bcd60e51b815260040161045790612283565b6001600160a01b03851660009081526009602052604090205460ff16610a355760405162461bcd60e51b815260040161045790612771565b610bbb565b6000610a446117d4565b7fe8879d0159a5862e68322a449d14dcfb21ad39e0c3dc66f88aff16b87aa27eae86610a90577f31d77d35dcd597e2453861d123e3d7ee551c84d42d8d97544835a74f1ccb251b610ab2565b7f9d3cc82da8126179611840997002f7d09633ad258b9c11d6e1dccc7e1ad477415b6001600160a01b038a16600090815260086020526040812080548c928c928c9291610adc83612850565b91905055604051602001610af596959493929190612158565b60405160208183030381529060405280519060200120604051602001610b1c92919061204e565b604051602081830303815290604052805190602001209050600060018286868660405160008152602001604052604051610b5994939291906121b8565b6020604051602081039080840390855afa158015610b7b573d6000803e3d6000fd5b505050602060405103519050876001600160a01b0316816001600160a01b031614610bb85760405162461bcd60e51b815260040161045790612375565b50505b6001600160a01b038681166000818152600760209081526040808320948a168084529490915290819020805460ff1916881515179055517f1d3e246ebbc933bf65d3290db9f93d67ab91a12d2b19308a35806e04d1c174c590610c1f90889061212d565b60405180910390a3505050505050565b6003546001600160a01b03163314610c595760405162461bcd60e51b815260040161045790612716565b610c61611880565b565b6003546001600160a01b03163314610c8d5760405162461bcd60e51b815260040161045790612716565b610c96816118f0565b50565b600a602052600090815260409020805460019091015482565b6000610cbc6119f8565b90505b90565b60096020526000908152604090205460ff1681565b6001600160a01b0382166000908152600a6020526040812060018101548154610d0090856127ee565b610d0a91906127ce565b949350505050565b7f789f0daca1cd17baa821e8d7454225d50b9f3e7c22acb67c2b2fff4f686a128290565b604051806040016040528060018152602001603160f81b81525081565b60015462010000900460ff1690565b600060026000541415610d875760405162461bcd60e51b8152600401610457906126df565b600260009081556001600160a01b0386168152600a6020526040902054841115610dc35760405162461bcd60e51b815260040161045790612440565b6040516370a0823160e01b815285906000906001600160a01b038316906370a0823190610df4903090600401612069565b60206040518083038186803b158015610e0c57600080fd5b505afa158015610e20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e449190611ea1565b9050610e5a6001600160a01b03831689886117b5565b6000610e66888861127d565b90507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd9896001600160a01b03166323e30c8b338b8b868c8c6040518763ffffffff1660e01b8152600401610ebf969594939291906120a1565b602060405180830381600087803b158015610ed957600080fd5b505af1158015610eed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f119190611ea1565b14610f2e5760405162461bcd60e51b8152600401610457906122ba565b610f4f8930610f3d848b6127b6565b6001600160a01b03871692919061172a565b600082846001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610f7e9190612069565b60206040518083038186803b158015610f9657600080fd5b505afa158015610faa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fce9190611ea1565b610fd8919061280d565b905081811015610ffa5760405162461bcd60e51b815260040161045790612477565b6001600160a01b0389166000908152600a6020526040812080548492906110229084906127b6565b92505081905550896001600160a01b0316846001600160a01b0316336001600160a01b03167f581cf1fe7a440a4f68b6fdeba82ea38faf67f97ec14d5d9831a450e79a3849028b866040516110789291906127a8565b60405180910390a46001945050505050600160005595945050505050565b6001600160a01b03166000908152600a602052604090205490565b6004546001600160a01b031633146110db5760405162461bcd60e51b8152600401610457906124e5565b6003546004546040517f3996db4523d078738f597d29c05515ab90a28170fdd8dd6aeea6b6af99700bd292611120926001600160a01b0391821692911690429061207d565b60405180910390a160048054600380546001600160a01b03199081166001600160a01b03841617909155169055565b6003546001600160a01b031633146111795760405162461bcd60e51b815260040161045790612716565b610c61611a1d565b6003546001600160a01b031681565b67016345785d8a000081565b6004546001600160a01b031681565b600760209081526000928352604080842090915290825290205460ff1681565b6003546001600160a01b031633146111f55760405162461bcd60e51b815260040161045790612716565b6001600160a01b03821661121b5760405162461bcd60e51b8152600401610457906123e3565b6001600160a01b03821660009081526009602052604090819020805460ff1916831515179055517f868ef4c4efa656ac9fe74e223335211b2da76220bf70e4a05c30c6a857e89e0d9061127190849084906120f9565b60405180910390a15050565b6000670de0b6b3a76400006002548361129691906127ee565b6112a091906127ce565b9392505050565b600154610100900460ff16806112c0575060015460ff16155b6112dc5760405162461bcd60e51b815260040161045790612532565b600154610100900460ff16158015611306576001805460ff1961ff00199091166101001716811790555b6001600160a01b03821661132c5760405162461bcd60e51b8152600401610457906125dc565b67016345785d8a0000600254106113555760405162461bcd60e51b8152600401610457906122f1565b61135d611a7c565b6113c87f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611a83565b6005556002839055600380546001600160a01b0319166001600160a01b03841617905580156113fd576001805461ff00191690555b505050565b6001600160a01b0383166000908152600a60205260408120600181015480156114775781548061143283886127ee565b61143c91906127ce565b935084801561145e5750858261145283876127ee565b61145c91906127ce565b105b156114715761146e8460016127b6565b93505b5061147b565b8492505b50509392505050565b600260005414156114a75760405162461bcd60e51b8152600401610457906126df565b60026000556003546001600160a01b031633146114d65760405162461bcd60e51b815260040161045790612716565b6040516370a0823160e01b81526000906001600160a01b038316906370a0823190611505903090600401612069565b60206040518083038186803b15801561151d57600080fd5b505afa158015611531573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115559190611ea1565b6001600160a01b0383166000908152600a60205260408120549192509061157c908361280d565b600354909150611599906001600160a01b038581169116836117b5565b7f891d905c747e7308f7e952ff603f2ac799bc5abc150b5792024a59b5c96273d283826040516115ca929190612114565b60405180910390a15050600160005550565b6115e4610d53565b156116015760405162461bcd60e51b8152600401610457906124ae565b82336001600160a01b038216148061164157506001600160a01b038116600090815260076020908152604080832033845290915290205460ff1615156001145b61165d5760405162461bcd60e51b81526004016104579061250c565b61166985858585611ac4565b5050505050565b6003546001600160a01b0316331461169a5760405162461bcd60e51b815260040161045790612716565b6001600160a01b0381166116c05760405162461bcd60e51b815260040161045790612317565b600480546001600160a01b0319166001600160a01b0383161790556040517f75ec58ed4c3b4778d64c8fb2682d99b9844d486931205289f0c8e9951eaab8329061090e9083904290612114565b600660209081526000928352604080842090915290825290205481565b6117af846323b872dd60e01b85858560405160240161174b9392919061207d565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611bc4565b50505050565b6113fd8363a9059cbb60e01b848460405160240161174b929190612114565b60007f00000000000000000000000000000000000000000000000000000000000000006117ff611c53565b141561180e5750600554610cbf565b6118797f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611a83565b9050610cbf565b611888610d53565b6118a45760405162461bcd60e51b81526004016104579061224c565b6001805462ff0000191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6118d9611c57565b6040516118e69190612069565b60405180910390a1565b60006118fa6119f8565b6001600160a01b031614156119215760405162461bcd60e51b815260040161045790612603565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561195a57600080fd5b505afa15801561196e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119929190611ea1565b61199a610d12565b146119b75760405162461bcd60e51b815260040161045790612209565b6119c081611c5b565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc6119e9610d12565b8260405161090e929190612141565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b611a25610d53565b15611a425760405162461bcd60e51b8152600401610457906124ae565b6001805462ff00001916620100001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118d9611c57565b6001600055565b6000838383611a90611c53565b30604051602001611aa595949392919061218c565b6040516020818303038152906040528051906020012090509392505050565b6001600160a01b038216611aea5760405162461bcd60e51b8152600401610457906123ac565b6001600160a01b03808516600090815260066020908152604080832093871683529290522054611b1b90829061280d565b6001600160a01b03858116600090815260066020908152604080832088851684529091528082209390935590841681522054611b589082906127b6565b6001600160a01b0380861660008181526006602090815260408083208886168085529252918290209490945551918616917fd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f90611bb6908690612138565b60405180910390a450505050565b6000611c19826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611c7f9092919063ffffffff16565b8051909150156113fd5780806020019051810190611c379190611e85565b6113fd5760405162461bcd60e51b815260040161045790612695565b4690565b3390565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b6060610d0a848460008585611c9385611d28565b611caf5760405162461bcd60e51b81526004016104579061265e565b600080866001600160a01b03168587604051611ccb9190612032565b60006040518083038185875af1925050503d8060008114611d08576040519150601f19603f3d011682016040523d82523d6000602084013e611d0d565b606091505b5091509150611d1d828286611d2e565b979650505050505050565b3b151590565b60608315611d3d5750816112a0565b825115611d4d5782518084602001fd5b8160405162461bcd60e51b815260040161045791906121d6565b600060208284031215611d78578081fd5b81356112a081612881565b60008060408385031215611d95578081fd5b8235611da081612881565b91506020830135611db081612881565b809150509250929050565b60008060008060008060c08789031215611dd3578182fd5b8635611dde81612881565b95506020870135611dee81612881565b94506040870135611dfe81612896565b9350606087013560ff81168114611e13578283fd5b9598949750929560808101359460a0909101359350915050565b60008060408385031215611e3f578182fd5b8235611e4a81612881565b91506020830135611db081612896565b60008060408385031215611e6c578182fd5b8235611e7781612881565b946020939093013593505050565b600060208284031215611e96578081fd5b81516112a081612896565b600060208284031215611eb2578081fd5b5051919050565b60008060408385031215611d95578182fd5b60008060008060808587031215611ee0578384fd5b8435611eeb81612881565b93506020850135611efb81612881565b92506040850135611f0b81612881565b9396929550929360600135925050565b600080600060608486031215611f2f578283fd5b8335611f3a81612881565b9250602084013591506040840135611f5181612896565b809150509250925092565b600080600080600060808688031215611f73578283fd5b8535611f7e81612881565b94506020860135611f8e81612881565b935060408601359250606086013567ffffffffffffffff80821115611fb1578283fd5b818801915088601f830112611fc4578283fd5b813581811115611fd2578384fd5b896020828501011115611fe3578384fd5b9699959850939650602001949392505050565b600060208284031215612007578081fd5b5035919050565b60008060408385031215612020578182fd5b823591506020830135611db081612881565b60008251612044818460208701612824565b9190910192915050565b61190160f01b81526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a060808301528260a0830152828460c084013781830160c090810191909152601f909201601f1916010195945050505050565b6001600160a01b039290921682521515602082015260400190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b95865260208601949094526001600160a01b039283166040860152911660608401521515608083015260a082015260c00190565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b60006020825282518060208401526121f5816040850160208701612824565b601f01601f19169190910160400192915050565b60208082526023908201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60408201526267696360e81b606082015260800190565b60208082526014908201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604082015260600190565b6020808252600f908201527f494e56414c49445f415050524f56450000000000000000000000000000000000604082015260600190565b60208082526019908201527f49455243333135363a2043616c6c6261636b206661696c656400000000000000604082015260600190565b6020808252600c908201526b494e56414c49445f5241544560a01b604082015260600190565b60208082526011908201527f494e56414c49445f4e45575f4f574e4552000000000000000000000000000000604082015260600190565b6020808252600d908201526c13d3931657d0d3d395149050d5609a1b604082015260600190565b60208082526011908201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604082015260600190565b60208082526012908201527f494e56414c49445f544f5f414444524553530000000000000000000000000000604082015260600190565b6020808252600f908201527f696e76616c69645f616464726573730000000000000000000000000000000000604082015260600190565b6020808252600c908201526b24a72b20a624a22faaa9a2a960a11b604082015260600190565b60208082526012908201527f4e6f7420656e6f7567682062616c616e63650000000000000000000000000000604082015260600190565b6020808252600f908201527f6e6f7420656e6f75676820666565730000000000000000000000000000000000604082015260600190565b60208082526010908201527f5061757361626c653a2070617573656400000000000000000000000000000000604082015260600190565b6020808252600d908201526c34b73b30b634b21037bbb732b960991b604082015260600190565b6020808252600c908201526b13d3931657d0531313d5d15160a21b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201527f647920696e697469616c697a6564000000000000000000000000000000000000606082015260800190565b6020808252600d908201526c494e56414c49445f524154494f60981b604082015260600190565b6020808252600c908201526b696e76616c6964207261746560a01b604082015260600190565b6020808252600d908201526c24a72b20a624a22fa7aba722a960991b604082015260600190565b6020808252601d908201527f5555505350726f786961626c653a206e6f742075706772616461626c65000000604082015260600190565b6020808252600a90820152692727aa2fa9a2a72222a960b11b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6020808252600a908201526927a7262cafa7aba722a960b11b604082015260600190565b60208082526010908201527f494e56414c49445f434f4e545241435400000000000000000000000000000000604082015260600190565b6020808252600f908201527f4e4f545f57484954454c49535445440000000000000000000000000000000000604082015260600190565b918252602082015260400190565b600082198211156127c9576127c961286b565b500190565b6000826127e957634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156128085761280861286b565b500290565b60008282101561281f5761281f61286b565b500390565b60005b8381101561283f578181015183820152602001612827565b838111156117af5750506000910152565b60006000198214156128645761286461286b565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610c9657600080fd5b8015158114610c9657600080fdfea264697066735822122040fdb0a2e7fb0b1564cfb541c527cb2ec7d6d8796e64553845a78110dee79fb964736f6c63430008010033",
  "devdoc": {
    "author": "@samparsky",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "setup a vault"
      },
      "deposit(address,address,address,uint256)": {
        "params": {
          "_amount": "Token amount in native representation to deposit.",
          "_from": "which account to pull the tokens.",
          "_to": "which account to push the tokens.",
          "_token": "The ERC-20 token to deposit."
        },
        "returns": {
          "amountOut": "The deposit amount in underlying token",
          "shareOut": "The deposit amount in vault shares"
        }
      },
      "flashFee(address,uint256)": {
        "params": {
          "": "// _token The loan currency.",
          "_amount": "The amount of tokens lent."
        },
        "returns": {
          "_0": "The amount of `token` to be charged for the loan, on top of the returned principal."
        }
      },
      "flashLoan(address,address,uint256,bytes)": {
        "params": {
          "_amount": "The amount of tokens lent.",
          "_data": "Arbitrary data structure, intended to contain user-defined parameters.",
          "_receiver": "The receiver of the tokens in the loan, and the receiver of the callback.",
          "_token": "The loan currency."
        }
      },
      "getCodeAddress()": {
        "details": "Get current implementation code address."
      },
      "maxFlashLoan(address)": {
        "params": {
          "_token": "The loan currency."
        },
        "returns": {
          "_0": "The amount of `token` that can be borrowed."
        }
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "proxiableUUID()": {
        "details": "Proxiable UUID marker function.      This would help to avoid wrong logic contract to be used for upgrading."
      },
      "rescueFunds(address)": {
        "params": {
          "_token": "ERC20 token to rescue funds from"
        }
      },
      "toShare(address,uint256,bool)": {
        "details": "Helper function to represent an `amount` of `token` in shares.",
        "params": {
          "_amount": "The `token` amount.",
          "_ceil": "If to ceil the amount or not",
          "_token": "The ERC-20 token."
        },
        "returns": {
          "share": "The token amount represented in shares."
        }
      },
      "toUnderlying(address,uint256)": {
        "params": {
          "_share": "The amount of shares.",
          "_token": "The ERC-20 token."
        },
        "returns": {
          "amount": "The share amount back into native representation."
        }
      },
      "transfer(address,address,address,uint256)": {
        "params": {
          "_from": "which user to pull the tokens.",
          "_shares": "of shares to transfer",
          "_to": "which user to push the tokens.",
          "_token": "The ERC-20 token to transfer."
        }
      },
      "transferOwnership(address)": {
        "params": {
          "_newOwner": "The new team"
        }
      },
      "updateFlashloanRate(uint256)": {
        "details": "Update the flashloan rate charged, only owner can call",
        "params": {
          "_newRate": "The ERC-20 token."
        }
      },
      "withdraw(address,address,address,uint256)": {
        "params": {
          "_from": "which user to pull the tokens.",
          "_shares": "of shares to withdraw",
          "_to": "which user to push the tokens.",
          "_token": "The ERC-20 token to withdraw."
        },
        "returns": {
          "amountOut": "The amount of underlying transferred"
        }
      }
    },
    "title": "Vault",
    "version": 1
  },
  "userdoc": {
    "events": {
      "Deposit(address,address,address,uint256,uint256)": {
        "notice": "Emitted on deposit"
      },
      "Withdraw(address,address,address,uint256,uint256)": {
        "notice": "Emitted on withdraw"
      }
    },
    "kind": "user",
    "methods": {
      "MAX_FLASHLOAN_RATE()": {
        "notice": "max flashlaon rate 10%"
      },
      "acceptOwnership()": {
        "notice": "accept transfer of control"
      },
      "allowContract(address,bool)": {
        "notice": "Enables or disables a contract for approval without signed message."
      },
      "allowedContracts(address)": {
        "notice": "mapping to contract to whitelist status"
      },
      "approveContract(address,address,bool,uint8,bytes32,bytes32)": {
        "notice": "approve a contract to enable the contract to withdraw"
      },
      "balanceOf(address,address)": {
        "notice": "mapping of token asset to user address and balance"
      },
      "deposit(address,address,address,uint256)": {
        "notice": "Deposit an amount of `token`"
      },
      "flashFee(address,uint256)": {
        "notice": "The fee to be charged for a given loan."
      },
      "flashLoan(address,address,uint256,bytes)": {
        "notice": "Initiate a flash loan."
      },
      "flashLoanRate()": {
        "notice": "the flashloan rate to charge for flash loans"
      },
      "maxFlashLoan(address)": {
        "notice": "The amount of currency available to be lent."
      },
      "name()": {
        "notice": "vault name"
      },
      "owner()": {
        "notice": "the address that access to perform `admin` functions"
      },
      "pause()": {
        "notice": "pause vault actions"
      },
      "rescueFunds(address)": {
        "notice": "rescueFunds Enables us to rescue funds that are not tracked"
      },
      "toUnderlying(address,uint256)": {
        "notice": "Helper function represent shares back into the `token` amount."
      },
      "totals(address)": {
        "notice": "mapping of asset to total deposit and shares minted"
      },
      "transfer(address,address,address,uint256)": {
        "notice": "Transfer share of `token` to another account"
      },
      "transferOwnership(address)": {
        "notice": "Transfer control from current owner address to another"
      },
      "unpause()": {
        "notice": "unpause vault actions"
      },
      "userApprovalNonce(address)": {
        "notice": "mapping of user to approval nonce"
      },
      "userApprovedContracts(address,address)": {
        "notice": "mapping of user to contract to approval status"
      },
      "version()": {
        "notice": "vault version"
      },
      "withdraw(address,address,address,uint256)": {
        "notice": "Withdraw the underlying share of `token` from a user account."
      }
    },
    "notice": "Vault contract stores assets deposited into the Lending pairs. It enables deposit, withdrawal, flashloans and transfer of tokens. It represents the deposited token amount in form of shares This contract implements the EIP3156 IERC3156FlashBorrower for flashloans. Rebasing tokens ARE NOT supported and WILL cause loss of funds.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 16232,
        "contract": "contracts/Vault.sol:Vault",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 248,
        "contract": "contracts/Vault.sol:Vault",
        "label": "_initialized",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 251,
        "contract": "contracts/Vault.sol:Vault",
        "label": "_initializing",
        "offset": 1,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 306,
        "contract": "contracts/Vault.sol:Vault",
        "label": "_paused",
        "offset": 2,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 7383,
        "contract": "contracts/Vault.sol:Vault",
        "label": "flashLoanRate",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 7386,
        "contract": "contracts/Vault.sol:Vault",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 7389,
        "contract": "contracts/Vault.sol:Vault",
        "label": "newOwner",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 7392,
        "contract": "contracts/Vault.sol:Vault",
        "label": "_CACHED_DOMAIN_SEPARATOR",
        "offset": 0,
        "slot": "5",
        "type": "t_bytes32"
      },
      {
        "astId": 7401,
        "contract": "contracts/Vault.sol:Vault",
        "label": "balanceOf",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_contract(IERC20)959,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 7408,
        "contract": "contracts/Vault.sol:Vault",
        "label": "userApprovedContracts",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 7413,
        "contract": "contracts/Vault.sol:Vault",
        "label": "userApprovalNonce",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 7418,
        "contract": "contracts/Vault.sol:Vault",
        "label": "allowedContracts",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 7425,
        "contract": "contracts/Vault.sol:Vault",
        "label": "totals",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_contract(IERC20)959,t_struct(TotalBase)7380_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)959": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_contract(IERC20)959,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_contract(IERC20)959",
        "label": "mapping(contract IERC20 => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_contract(IERC20)959,t_struct(TotalBase)7380_storage)": {
        "encoding": "mapping",
        "key": "t_contract(IERC20)959",
        "label": "mapping(contract IERC20 => struct VaultStorageV1.TotalBase)",
        "numberOfBytes": "32",
        "value": "t_struct(TotalBase)7380_storage"
      },
      "t_struct(TotalBase)7380_storage": {
        "encoding": "inplace",
        "label": "struct VaultStorageV1.TotalBase",
        "members": [
          {
            "astId": 7377,
            "contract": "contracts/Vault.sol:Vault",
            "label": "totalUnderlyingDeposit",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 7379,
            "contract": "contracts/Vault.sol:Vault",
            "label": "totalSharesMinted",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}