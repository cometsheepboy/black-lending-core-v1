/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Withdrawable } from "../Withdrawable";

export class Withdrawable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Withdrawable> {
    return super.deploy(overrides || {}) as Promise<Withdrawable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Withdrawable {
    return super.attach(address) as Withdrawable;
  }
  connect(signer: Signer): Withdrawable__factory {
    return super.connect(signer) as Withdrawable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Withdrawable {
    return new Contract(address, _abi, signerOrProvider) as Withdrawable;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LogWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600061001b61006a565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006e565b3390565b61086b8061007d6000396000f3fe60806040526004361061003f5760003560e01c806351cff8d914610041578063715018a6146100615780638da5cb5b14610076578063f2fde38b146100a1575b005b34801561004d57600080fd5b5061003f61005c3660046105da565b6100c1565b34801561006d57600080fd5b5061003f610235565b34801561008257600080fd5b5061008b6102cb565b6040516100989190610655565b60405180910390f35b3480156100ad57600080fd5b5061003f6100bc3660046105da565b6102da565b6100c96103a7565b6001600160a01b03166100da6102cb565b6001600160a01b0316146101095760405162461bcd60e51b815260040161010090610741565b60405180910390fd5b60006001600160a01b038216610152575060405130803191339083156108fc029084906000818181858888f1935050505015801561014b573d6000803e3d6000fd5b50506101e4565b6040516370a0823160e01b81526001600160a01b038316906370a082319061017e903090600401610655565b60206040518083038186803b15801561019657600080fd5b505afa1580156101aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ce9190610621565b90506101e46001600160a01b03831633836103ab565b816001600160a01b0316336001600160a01b03167f74217ce088f00bfd283666b763c64f0d1b1c345591dfdd01891dddf52446694e83426040516102299291906107f7565b60405180910390a35050565b61023d6103a7565b6001600160a01b031661024e6102cb565b6001600160a01b0316146102745760405162461bcd60e51b815260040161010090610741565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000546001600160a01b031690565b6102e26103a7565b6001600160a01b03166102f36102cb565b6001600160a01b0316146103195760405162461bcd60e51b815260040161010090610741565b6001600160a01b03811661033f5760405162461bcd60e51b8152600401610100906106b5565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b3390565b61042e8363a9059cbb60e01b84846040516024016103ca929190610669565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610433565b505050565b6000610488826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166104c29092919063ffffffff16565b80519091501561042e57808060200190518101906104a69190610601565b61042e5760405162461bcd60e51b8152600401610100906107ad565b60606104d184846000856104db565b90505b9392505050565b6060824710156104fd5760405162461bcd60e51b8152600401610100906106fb565b6105068561059b565b6105225760405162461bcd60e51b815260040161010090610776565b600080866001600160a01b0316858760405161053e9190610639565b60006040518083038185875af1925050503d806000811461057b576040519150601f19603f3d011682016040523d82523d6000602084013e610580565b606091505b50915091506105908282866105a1565b979650505050505050565b3b151590565b606083156105b05750816104d4565b8251156105c05782518084602001fd5b8160405162461bcd60e51b81526004016101009190610682565b6000602082840312156105eb578081fd5b81356001600160a01b03811681146104d4578182fd5b600060208284031215610612578081fd5b815180151581146104d4578182fd5b600060208284031215610632578081fd5b5051919050565b6000825161064b818460208701610805565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b60006020825282518060208401526106a1816040850160208701610805565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b918252602082015260400190565b60005b83811015610820578181015183820152602001610808565b8381111561082f576000848401525b5050505056fea26469706673582212208034fda0c4e42f4ea8ace1754598bf64c3d202206f7f79b732cafb9b5897b32d64736f6c63430008010033";
